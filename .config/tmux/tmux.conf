set -g mouse on
set -g base-index 1
set -g default-terminal "tmux-256color"
setw -g mode-keys vi

# Theming
set -g status-style bg=#7f7fff,fg=#000000
set -g pane-active-border-style fg=#66d9ef
set -g pane-border-style fg=#333842

set -g renumber-windows on

# set -g status-right "#(~/.config/scripts/battery-percent)%"
set -g status-right "#(date '+%H:%M %d-%b-%y') #(~/.config/scripts/battery-percent)"

bind-key m set-option -g mouse \; display "Mouse : #{?mouse,ON,OFF}"

# set -g default-terminal "screen-256color"

# bind -n C-h select-pane -L
# bind -n C-j select-pane -D
# bind -n C-k select-pane -U
# bind -n C-l select-pane -R

# vim like window navigation
# bind  select-window -t :-
# bind -n C-l select-window -t : 

bind -n C-x kill-pane

# bind-key -Tmy-keys t next-window  # bind 't' to 'next-window' in 'my-keys' table
# bind-key -n g switch-client -T my-keys  # bind 'C-g' to switch to 'my-keys' table
# bind-key -n C-w switch-client -T win-keys
# bind-key -T win-keys n next-window
# bind-key -T win-keys p previous-window
# bind-key -T win-keys w new-window
# bind-key -T win-keys q kill-window


# set-window-option -g mode-key vi
#
# unbind-key -n C-_
#
# set -s escape-time 0

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
# End smart pane switching

# Resize panes
bind-key -n C-F7 resize-pane -L
bind-key -n C-F8 resize-pane -D
bind-key -n C-F9 resize-pane -U
bind-key -n C-F10 resize-pane -R

bind-key -n F7 resize-pane -L 5
bind-key -n F8 resize-pane -D 5
bind-key -n F9 resize-pane -U 5
bind-key -n F10 resize-pane -R 5

# C-/
bind-key -n ^_ send-keys C-/

# C-L clear
bind-key C-L send-keys C-L

# Switch to last active pane
# bind-key -n ^@ last-pane
bind-key l last-pane

# maximize pane
bind-key -n C-f resize-pane -Z

# Set session default directory to current path
bind M-c attach-session -c "#{pane_current_path}" 

# for allowing mouse clicks in vim

unbind-key -n C-Space
bind-key -n C-Space send-keys C-Space

# Select windows
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9
bind -n M-0 select-window -t 10

bind -n M-n next-window
bind -n M-p previous-window

bind -n M-w new-window

bind -n M-q kill-window

bind -n M-l last-window

##### TPM - Tmux Plugin Manager
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'


set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @continuum-restore 'on'

# for vim
set -g @resurrect-strategy-vim 'session'
# for neovim
set -g @resurrect-strategy-nvim 'session'
# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

